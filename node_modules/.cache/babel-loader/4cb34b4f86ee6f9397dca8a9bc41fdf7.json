{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar cheerio_1 = __importDefault(require(\"cheerio\"));\n\nvar service_1 = require(\"./service\");\n\nvar LinkedIn =\n/*#__PURE__*/\nfunction (_service_1$Service) {\n  _inherits(LinkedIn, _service_1$Service);\n\n  function LinkedIn() {\n    _classCallCheck(this, LinkedIn);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LinkedIn).apply(this, arguments));\n  }\n\n  _createClass(LinkedIn, null, [{\n    key: \"getBaseUrls\",\n    value: function getBaseUrls() {\n      var baseUrls = ['https://www.linkedin.com/feed/update/', 'http://www.linkedin.com/feed/update/', 'www.linkedin.com/feed/update/'];\n      return baseUrls;\n    }\n  }, {\n    key: \"getProofUrl\",\n    value: function getProofUrl(proof) {\n      var baseUrls = this.getBaseUrls();\n      var proofUrl = proof.proof_url.toLowerCase();\n      proofUrl = _get(_getPrototypeOf(LinkedIn), \"prefixScheme\", this).call(this, proofUrl);\n\n      for (var i = 0; i < baseUrls.length; i++) {\n        if (proofUrl.startsWith(\"\".concat(baseUrls[i]))) {\n          return proofUrl;\n        }\n      }\n\n      throw new Error(\"Proof url \".concat(proof.proof_url, \" is not valid for service \").concat(proof.service));\n    }\n  }, {\n    key: \"normalizeUrl\",\n    value: function normalizeUrl(proof) {\n      return '';\n    }\n  }, {\n    key: \"shouldValidateIdentityInBody\",\n    value: function shouldValidateIdentityInBody() {\n      return true;\n    }\n  }, {\n    key: \"getProofIdentity\",\n    value: function getProofIdentity(searchText) {\n      var $ = cheerio_1.default.load(searchText);\n      var profileLink = $('article').find('.post-meta__profile-link');\n\n      if (profileLink !== undefined) {\n        if (profileLink.attr('href') === undefined) {\n          return '';\n        }\n\n        return profileLink.attr('href').split('/').pop();\n      } else {\n        return '';\n      }\n    }\n  }, {\n    key: \"getProofStatement\",\n    value: function getProofStatement(searchText) {\n      var $ = cheerio_1.default.load(searchText);\n      var postContent = $('article').find('.commentary');\n      var statement = '';\n\n      if (postContent !== undefined) {\n        statement = postContent.text();\n      }\n\n      return statement;\n    }\n  }]);\n\n  return LinkedIn;\n}(service_1.Service);\n\nexports.LinkedIn = LinkedIn;","map":null,"metadata":{},"sourceType":"script"}