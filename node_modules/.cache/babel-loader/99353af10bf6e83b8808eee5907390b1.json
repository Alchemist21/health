{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // @ts-ignore: Could not find a declaration file for module\n\nvar schema_inspector_1 = __importDefault(require(\"schema-inspector\"));\n\nvar profileTokens_1 = require(\"./profileTokens\");\n\nvar profileProofs_1 = require(\"./profileProofs\");\n\nvar profileZoneFiles_1 = require(\"./profileZoneFiles\");\n\nvar schemaDefinition = {\n  type: 'object',\n  properties: {\n    '@context': {\n      type: 'string',\n      optional: true\n    },\n    '@type': {\n      type: 'string'\n    }\n  }\n};\n\nvar Profile =\n/*#__PURE__*/\nfunction () {\n  function Profile() {\n    var profile = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Profile);\n\n    this._profile = Object.assign({}, {\n      '@context': 'http://schema.org/'\n    }, profile);\n  }\n\n  _createClass(Profile, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return Object.assign({}, this._profile);\n    }\n  }, {\n    key: \"toToken\",\n    value: function toToken(privateKey) {\n      return profileTokens_1.signProfileToken(this.toJSON(), privateKey);\n    }\n  }], [{\n    key: \"validateSchema\",\n    value: function validateSchema(profile) {\n      var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      schemaDefinition.strict = strict;\n      return schema_inspector_1.default.validate(schemaDefinition, profile);\n    }\n  }, {\n    key: \"fromToken\",\n    value: function fromToken(token) {\n      var publicKeyOrAddress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var profile = profileTokens_1.extractProfile(token, publicKeyOrAddress);\n      return new Profile(profile);\n    }\n  }, {\n    key: \"makeZoneFile\",\n    value: function makeZoneFile(domainName, tokenFileURL) {\n      return profileZoneFiles_1.makeProfileZoneFile(domainName, tokenFileURL);\n    }\n  }, {\n    key: \"validateProofs\",\n    value: function validateProofs(domainName) {\n      return profileProofs_1.validateProofs(new Profile().toJSON(), domainName);\n    }\n  }]);\n\n  return Profile;\n}();\n\nexports.Profile = Profile;","map":null,"metadata":{},"sourceType":"script"}