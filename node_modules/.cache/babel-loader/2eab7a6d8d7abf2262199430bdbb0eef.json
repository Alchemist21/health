{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Me\\\\Desktop\\\\hackfest2019\\\\healthr\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar cheerio_1 = __importDefault(require(\"cheerio\"));\n\nvar service_1 = require(\"./service\");\n\nvar Twitter =\n/*#__PURE__*/\nfunction (_service_1$Service) {\n  _inherits(Twitter, _service_1$Service);\n\n  function Twitter() {\n    _classCallCheck(this, Twitter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Twitter).apply(this, arguments));\n  }\n\n  _createClass(Twitter, null, [{\n    key: \"getBaseUrls\",\n    value: function getBaseUrls() {\n      var baseUrls = ['https://twitter.com/', 'http://twitter.com/', 'twitter.com/'];\n      return baseUrls;\n    }\n  }, {\n    key: \"normalizeUrl\",\n    value: function normalizeUrl(proof) {\n      return '';\n    }\n  }, {\n    key: \"getProofStatement\",\n    value: function getProofStatement(searchText) {\n      var $ = cheerio_1.default.load(searchText);\n      var statement = $('meta[property=\"og:description\"]').attr('content');\n\n      if (statement !== undefined) {\n        return statement.trim().replace('“', '').replace('”', '');\n      } else {\n        return '';\n      }\n    }\n  }]);\n\n  return Twitter;\n}(service_1.Service);\n\nexports.Twitter = Twitter;","map":null,"metadata":{},"sourceType":"script"}